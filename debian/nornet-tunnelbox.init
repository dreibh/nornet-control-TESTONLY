#!/bin/sh
# $Id: rsplib-registrar.init 2682 2012-06-08 11:29:28Z dreibh $
#
# --------------- NorNet -- The Multi-Homing Testbed Project ----------------
#
# Copyright (C) 2012 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#

### BEGIN INIT INFO
# Provides:          nornet-tunnelbox
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: NorNet Tunnelbox
# Description:       This service provides a NorNet Tunnelbox.
### END INIT INFO


NAME="nornet-tunnelbox"
DESC="NorNet Tunnelbox"
NORNET_DIRECTORY="/etc/nornet"
# NORNET_DIRECTORY=/home/dreibh/src/rn/nornet/nornet-control/src
LOGFILE="/var/log/nornet-tunnelbox.log"
PATH=$NORNET_DIRECTORY:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
ACTION="$1"
shift


# Check whether NorNet directory is existing
if [ ! -e "$NORNET_DIRECTORY" ] ; then
   exit 0
fi

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


set -e

cd "$NORNET_DIRECTORY"

# Log what is going on ...
echo "`env LANG=C date +%FT%H:%M:%S`: ###### $0 $ACTION $@ ######"  >>$LOGFILE


# ###### Check whether file needs an update #################################
needs_update ()
{
   if [ ! -e "$1" ] ; then
      # There is nothing to update
      return 1
   elif [ "$3" = "-update-all" ] ; then
      # Force renewal of configuration
      return 0
   elif [ ! -e "$2" ] ; then
      # Target does not exist => update needed!
      return 0
   elif ! diff -q "$1" "$2" ; then
      # Target differs => update needed!
      return 0
   fi
   return 1
}


# ###### Get new configuration into temporary directory #####################
get_new_tunnelbox_configuration ()
{
   echo "Getting new configuration ..."
   rm -rf updated-tunnelbox-config
   mkdir updated-tunnelbox-config
   cd updated-tunnelbox-config
   if ! Make-Tunnelbox-Configuration ; then
      echo "NOTE: Unable to obtain full configuration, trying BOOTSTRAP instead ..."
      Make-Tunnelbox-Configuration -bootstrap
      Tunnelbox-Setup start -bootstrap
      echo "NOTE: Retrying to obtain full configuration ..."
      Make-Tunnelbox-Configuration
   fi
   cd ..
   mv updated-tunnelbox-config/* .
   rmdir updated-tunnelbox-config
}


# ###### Check configuration for updates and apply if necessary #############
check_and_configure ()
{
   get_new_tunnelbox_configuration

   # Permanently make important settings in sysctl configuration.
   sed -e "s/^[ \t]*[#]*[ \t]*net.ipv4.ip_forward[ \t]*=.*$/net.ipv4.ip_forward=1/" \
       -e "s/^[ \t]*[#]*[ \t]*net.ipv6.conf.all.forwarding[ \t]*=.*$/net.ipv6.conf.all.forwarding=1/" \
       -e "s/^[ \t]*[#]*[ \t]*net.ipv4.conf.all.send_redirects[ \t]*=.*$/net.ipv4.conf.all.send_redirects=0/" \
       </etc/sysctl.conf >/etc/nornet/sysctl-config && mv /etc/nornet/sysctl-config /etc/sysctl.conf && sudo sysctl -p

   # FIXME: How to compare configs?
   Tunnelbox-Setup start -event "check_and_configure" || true
}


# ###### Main program #######################################################
case "$ACTION" in
  start|stop|restart)
   echo -n "Starting $DESC: "
   Tunnelbox-Setup "$ACTION" $@ >>$LOGFILE && \
   echo "$NAME."
   ;;
  force-reload)
   Tunnelbox-Setup coldstart $@ >>$LOGFILE
   ;;
  status)
   Tunnelbox-Setup status -providers "*"
   ;;
  configure)
     rm -f tunnelbox*-config tunnelbox-bootstrap
     # All configuration files are gone. The tests below will trigger update.
     check_and_configure -update-all >>$LOGFILE
     Tunnelbox-Setup start -providers "*" -event "MANUAL CONFIGURE" >>$LOGFILE
     service nornet-node configure
     ;;
  check-and-configure)
     # Compare with existing configuration, update only if necessary.
     check_and_configure >>$LOGFILE
     service nornet-node check-and-configure
     ;;
  *)
   N=/etc/init.d/$NAME
   echo "Usage: $N {start|stop|restart|force-reload|configure|check-and-configure|status}" >&2
   exit 1
   ;;
esac

exit 0
