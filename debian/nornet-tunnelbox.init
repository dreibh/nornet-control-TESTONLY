#!/bin/sh
# --------------- NorNet -- The Multi-Homing Testbed Project ----------------
#
# Copyright (C) 2012 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#

### BEGIN INIT INFO
# Provides:          nornet-tunnelbox
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: NorNet Tunnelbox
# Description:       This service provides a NorNet Tunnelbox.
### END INIT INFO


NAME="nornet-tunnelbox"
DESC="NorNet Tunnelbox"
NORNET_DIRECTORY="/etc/nornet"
# NORNET_DIRECTORY=/home/dreibh/src/rn/nornet/nornet-control/src
LOGFILE="/var/log/nornet-tunnelbox.log"
PATH=$NORNET_DIRECTORY:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
ACTION="$1"
shift


# Check whether NorNet directory is existing
if [ ! -e "$NORNET_DIRECTORY" ] ; then
   exit 0
fi

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


set -e

cd "$NORNET_DIRECTORY"

# Load configuration from API config file
NorNet_LocalNode_Hostname=""
. ./nornetapi-config
if [ "$NorNet_LocalNode_Hostname" = "" ] ; then
   echo >&2 "ERROR: NorNet_LocalNode_Hostname is not set!"
   exit 1
fi

# Log what is going on ...
echo "`env LANG=C date +%FT%H:%M:%S`: ###### $0 $ACTION $@ ######"  >>$LOGFILE 2>&1


# ###### Check whether file needs an update #################################
needs_update ()
{
   if [ ! -e "$1" ] ; then
      # There is nothing to update
      return 1
   elif [ "$3" = "-update-all" ] ; then
      # Force renewal of configuration
      return 0
   elif [ ! -e "$2" ] ; then
      # Target does not exist => update needed!
      return 0
   elif ! diff -q "$1" "$2" ; then
      # Target differs => update needed!
      return 0
   fi
   return 1
}


# ###### Check configuration for updates and apply if necessary #############
check_and_configure ()
{
   # ====== Permanently make important settings in sysctl configuration =====
   sed -e "s/^[ \t]*[#]*[ \t]*net.ipv4.ip_forward[ \t]*=.*$/net.ipv4.ip_forward=1/" \
       -e "s/^[ \t]*[#]*[ \t]*net.ipv6.conf.all.forwarding[ \t]*=.*$/net.ipv6.conf.all.forwarding=1/" \
       -e "s/^[ \t]*[#]*[ \t]*net.ipv4.conf.all.send_redirects[ \t]*=.*$/net.ipv4.conf.all.send_redirects=0/" \
       </etc/sysctl.conf >/etc/nornet/sysctl-config
   if needs_update sysctl-config /etc/sysctl.conf $1 ; then
      mv /etc/nornet/sysctl-config /etc/sysctl.conf
      sysctl -p
   fi
   if [ -e /etc/sysctl.d/10-network-security.conf ] ; then
      sed -e "s/^[ \t]*net.ipv4.conf.default.rp_filter[ \t]*=[1-9].*$/net.ipv4.conf.default.rp_filter=0   # Set by nornet-tunnelbox's init script/" \
          -e "s/^[ \t]*net.ipv4.conf.all.rp_filter[ \t]*=[1-9].*$/net.ipv4.conf.all.rp_filter=0   # Set by nornet-tunnelbox's init script/" \
          </etc/sysctl.d/10-network-security.conf >/etc/nornet/sysctl-network-security-config
      if needs_update /etc/nornet/sysctl-network-security-config /etc/sysctl.d/10-network-security.conf $1 ; then
         mv /etc/nornet/sysctl-network-security-config /etc/sysctl.d/10-network-security.conf
         sysctl -p
      fi    
   fi
   if [ -e /etc/sysctl.d/10-ipv6-privacy.conf ] ; then
      sed -e "s/^[ \t]*net.ipv6.conf.all.use_tempaddr[ \t]*=.*$/net.ipv6.conf.all.use_tempaddr=0   # Set by nornet-tunnelbox's init script/" \
          -e "s/^[ \t]*net.ipv6.conf.default.use_tempaddr[ \t]*=.*$/net.ipv6.conf.default.use_tempaddr=0   # Set by nornet-tunnelbox's init script/" \
          </etc/sysctl.d/10-ipv6-privacy.conf >/etc/nornet/sysctl-ipv6-privacy-config
      if needs_update /etc/nornet/sysctl-ipv6-privacy-config /etc/sysctl.d/10-ipv6-privacy.conf $1 ; then
         mv /etc/nornet/sysctl-ipv6-privacy-config /etc/sysctl.d/10-ipv6-privacy.conf
         sysctl -p
      fi    
   fi

   # ====== Get new configuration into temporary directory ==================
   echo "`env LANG=C date +%FT%H:%M:%S`: Getting new configuration ..."
   rm -rf updated-tunnelbox-config
   mkdir updated-tunnelbox-config
   cd updated-tunnelbox-config
   if Make-Tunnelbox-Configuration ; then
      cd ..
      
      # ====== Set up tunnels and routing ===================================
      rm -f tunnelbox*-config tunnelbox-bootstrap tunnelbox-providers *.interface? *.provider
      mv updated-tunnelbox-config/tunnelbox-config updated-tunnelbox-config/*.provider updated-tunnelbox-config/*.interface? .
      Tunnelbox-Setup start -providers "@ALL"

      # ====== Apply DNS update =============================================
      rm -f zones.conf *.db
      mv updated-tunnelbox-config/zones.conf updated-tunnelbox-config/*.db .
      find /etc/bind -name zones.conf | xargs --no-run-if-empty rm -f
      find /etc/bind -name "*.db" | xargs --no-run-if-empty rm -f
      cp zones.conf *.db /etc/bind/
      if [ ! -e /var/cache/bind/slaves ] ; then
         mkdir /var/cache/bind/slaves
      fi
      chown bind:bind /var/cache/bind/slaves
      if [ -e /etc/bind/named.conf ] ; then
         if [ `grep "include \"/etc/bind/zones.conf\";" /etc/bind/named.conf | wc --lines` -eq 0 ] ; then
            echo "include \"/etc/bind/zones.conf\";"  >>/etc/bind/named.conf
         fi
      else
         echo "/etc/bind/named.conf does not exist! Something is going wrong ..."
      fi
      service bind9 reload

      # ====== Apply DHCP server update =====================================
      rm -f dhcpd-config
      mv updated-tunnelbox-config/dhcpd-config .
      if needs_update dhcpd-config /etc/dhcp/dhcpd.conf $1 ; then
         echo "`env LANG=C date +%FT%H:%M:%S`: DHCP server configuration has been updated => restarting DHCP service ..."
         cp dhcpd-config /etc/dhcp/dhcpd.conf
         echo "INTERFACES=\"$NorNet_LocalNode_NorNetInterface\"" >/etc/default/isc-dhcp-server
         service isc-dhcp-server restart
      fi

      # ====== Check for problems ===========================================
      if ! rmdir updated-tunnelbox-config ; then
         echo >&2 "ERROR: Something went wrong! updated-tunnelbox-config still contains unhandled configuration files!"
         ls -al updated-tunnelbox-config >&2
         exit 1
      fi
   fi
}


# ###### Main program #######################################################
case "$ACTION" in
  start|stop|restart)
   echo -n "Starting $DESC: "
   INTERFACES=`find /var/run/network -name "ifup.*" | sed -e "s/\/var\/run\/network\/ifup.//g" | xargs -n128 echo | sed -e "s/ /,/g"`
   Tunnelbox-Setup "$ACTION" -interfaces "$INTERFACES" -event "init script action: $ACTION; interfaces=$INTERFACES" $@ >>$LOGFILE 2>&1 && \
   echo "$NAME."
   ;;
  force-reload)
   Tunnelbox-Setup coldstart -providers "@ALL" $@ >>$LOGFILE 2>&1
   ;;
  status)
   Tunnelbox-Setup status -providers "@ALL" $@
   ;;
  configure)
     # All configuration files are gone. The tests below will trigger update.
     check_and_configure -update-all >>$LOGFILE 2>&1
     Tunnelbox-Setup start -providers "@ALL" -event "MANUAL CONFIGURE" >>$LOGFILE 2>&1
     service nornet-node configure
     ;;
  check-and-configure)
     # Compare with existing configuration, update only if necessary.
     check_and_configure >>$LOGFILE 2>&1
     service nornet-node check-and-configure
     ;;
  *)
   N=/etc/init.d/$NAME
   echo "Usage: $N {start|stop|restart|force-reload|configure|check-and-configure|status}" >&2
   exit 1
   ;;
esac

exit 0
