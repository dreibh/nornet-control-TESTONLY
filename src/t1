#!/usr/bin/python
# -*- coding: utf-8 -*-

# Needs package python-ipaddr (Fedora Core, Ubuntu, Debian)!
from ipaddr import IPAddress, IPNetwork, IPv4Address, IPv4Network, IPv6Address, IPv6Network;

from NorNetProviderSetup import *;
from NorNetTools         import *;

import os;
import re;
#from socket import *;


#print 'NodeVNet=', makeNorNetIP(1,1,2,123, 6)
#print 'NodeNet= ', makeNorNetIP(1,1,2,0, 6)
#print 'NodeNet0=', makeNorNetIP(1,1,2,-1, 6)
#print 'Site=    ', makeNorNetIP(1,1,0,0, 6)
#print 'Provider=', makeNorNetIP(1,0,0,0, 6)
#print 'NorNet=  ', makeNorNetIP(0,0,0,0, 6)
#print ''

#print 'Node=    ', makeNorNetIP(1,1,1,0, 4)
#print 'Site=    ', makeNorNetIP(1,1,0,0, 4)
#print 'Provider=', makeNorNetIP(1,0,0,0, 4)
#print 'NorNet=  ', makeNorNetIP(0,0,0,0, 4)



#addressList = getLocalAddresses(4)
#print "v4 = ", addressList

#addressList = getLocalAddresses(6)
#print "v6 = ", addressList

#for a in addressList:
   #print str(a),NorNet_IPv4Prefix.Contains(a),NorNet_IPv6Prefix.Contains(a)


## ###### Resolve hostname and return first address ##########################
#def resolveHostname(name, protocol=0):
   #try:
      #result = getaddrinfo(name, 123, protocol)
      #print result
      #return(IPAddress(result[0][4][0]))
   #except:
      #return None

#print resolveHostname('ntp1.uio.no', AF_INET6)


# ###### Get hostname from FQDN #############################################
def getHostnameFromFQDN(fqdn):
   match = re.search('^([a-zA-Z0-9\-]*)\.(.*)', domain)
   if match != None:
      return match.group(1)
   else:
      return fqdn

# ###### Get hostname from FQDN #############################################
def getDomainFromFQDN(fqdn):
   match = re.search('^([a-zA-Z0-9\-]*)\.(.*)', domain)
   if match != None:
      return match.group(2)
   else:
      return ''


domain = 'xy-ms-123-XY.alpha.site'
print getHostnameFromFQDN(domain), '\t', getDomainFromFQDN(domain), '\n'
