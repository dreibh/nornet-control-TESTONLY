#!/bin/bash -e
#
# Convert harddisk images of virtual machine
# Copyright (C) 2013 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


if [ $# -ne 3 ] ; then
   echo >&2 "Usage: $0 VM_name image_format image_variant"
   exit 1
fi

MACHINE_NAME="$1"
IMAGE_FORMAT="$2"
IMAGE_VARIANT="$3"


MACHINE_STATUS_FILE=`mktemp`
VBoxManage showvminfo "$MACHINE_NAME" --machinereadable >$MACHINE_STATUS_FILE

CONFIG_FILE=`cat $MACHINE_STATUS_FILE | grep "^CfgFile=" | sed -e "s/^CfgFile=\"//" -e "s/\"$//g"`
CONFIG_DIR=`dirname "$CONFIG_FILE"`

for controller in 0 1 2 3 ; do
   for port in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 ; do
      uuid=`cat $MACHINE_STATUS_FILE | grep "^\"SATA Controller-ImageUUID-$port-$controller" | sed -e "s/^\"SATA Controller-ImageUUID-$port-$controller\"=\"//"  -e "s/\"$//" || echo ""`
      if [ "$uuid" != "" ] ; then
         oldImage=`cat $MACHINE_STATUS_FILE | grep "^\"SATA Controller-$port-$controller" | sed -e "s/^\"SATA Controller-$port-$controller\"=\"//"  -e "s/\"$//" || echo ""`
         echo "Controller $controller, port $port: $uuid in $oldImage"
         if [ "$oldImage" != "" ] ; then
            if [ "$oldImage" != "$newImage" ] ; then
               variant=`echo $IMAGE_VARIANT | tr '[:upper:]' '[:lower:]'`
               newImage="$CONFIG_DIR/$MACHINE_NAME-DH$port-$controller.$variant.$IMAGE_FORMAT"
               if [ ! -e "$newImage" ] ; then
                  tempNewImage="$newImage.temp"
                  if [ -e "$tempNewImage" ] ; then
                     rm -f "$tempNewImage"
                  fi
                  
                  # ====== Apply the conversion =============================
                  echo "   Cloning $oldImage to $newImage ..."
                  VBoxManage clonehd "$oldImage" "$tempNewImage" --format "$IMAGE_FORMAT" --variant "$IMAGE_VARIANT"
                  mv "$tempNewImage" "$newImage"
                  VBoxManage -q storageattach "$MACHINE_NAME" --storagectl "SATA Controller" --port $port --device $controller --type hdd --medium "$newImage"

                  # ====== Remove old image, if not used any more ===========
                  HDD_STATUS_FILE=`mktemp`
                  VBoxManage list hdds >$HDD_STATUS_FILE

                  diskInfo=`cat $HDD_STATUS_FILE | grep -A6 "^UUID:        $uuid" || echo ""`
                  if [ "$diskInfo" != "" ] ; then
                     usage=`echo "$diskInfo" | grep "^Usage:" || echo ""`
                     if [ "$usage" = "" ] ; then 
                        echo "Removing old image $oldImage!"
                        VBoxManage -q closemedium disk "$uuid" --delete || true
                     else
                        echo "WARNING: Disk $uuid used.Leaving storage registration as is!"
                        echo "$usage"
                     fi
                  else
                     echo >&2 "ERROR: Something is going wrong! No HDD status found for UUID $uuid! May be VBoxManage has changed output format?"
                  fi

                  rm -f $HDD_STATUS_FILE
               else
                  echo "Disk $newImage already exists -> skipping conversion!"
               fi
            fi
         else
            echo "Disk $uuid not found -> skipping conversion!"
         fi
      fi
   done
done

rm -f $MACHINE_STATUS_FILE
