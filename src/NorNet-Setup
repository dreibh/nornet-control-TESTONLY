#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# NorNet Test Setup
# Copyright (C) 2012 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


# Needs package python-ipaddr (Fedora Core, Ubuntu, Debian)!
from ipaddr import IPv4Address, IPv4Network, IPv6Address, IPv6Network;

# NorNet
from NorNetTools         import *;
from NorNetAPI           import *;
from NorNetProviderSetup import *;
from NorNetSiteSetup     import *;


norNetSetup = [
 { 'site_index'        : 1,
   'site_long_name'    : 'Simula Research Laboratory',
   'site_short_name'   : 'SRL',
   'site_url'          : 'http://www.simula.nornet',
   'site_domain'       : 'simula.nornet',
   'site_city'         : 'Fornebu',
   'site_province'     : 'Østlandet',
   'site_country'      : 'Norge',
   'site_country_code' : 'NO',
   'site_latitude'     : 59.895933,
   'site_longitude'    : 10.627635,
   'site_pcu'          : [ IPv4Address('132.252.156.2'), 'pcu-root', 'a-secret-password' ],
   'site_providers' : [
      [ 'Uninett', 'eth0', IPv4Address('132.252.156.70'), IPv6Address('fd55:5555::70') ],
      [ 'Telenor', 'eth1', IPv4Address('169.254.100.70'), IPv6Address('::') ]
   ],
   'site_nodes' : [
      [ 100, 1, 'akerbrygge' ],
      [ 101, 2, 'bygdoey'    ],
      [ 102, 3, 'ekeberg'    ],
      [ 103, 4, 'fornebu'    ],
      [ 104, 5, 'frogner'    ],
      [ 105, 6, 'grefsen'    ],
      [ 106, 7, 'majorstuen' ],
      [ 107, 8, 'ullevaal'   ]
   ] }
]


      #siteAlphaNorNetIndex = 1
      #siteAlpha = makeNorNetSite('Simula Research Laboratory', 'SRL', 'srl', 'http://www.simula.nornet', 'simula.nornet',
                                 #siteAlphaNorNetIndex, 'Fornebu', 'Østlandet', 'Norge', 'NO', 59.895933, 10.627635, [
                                    #[ 'Uninett', 'eth0', IPv4Address('132.252.156.70'), IPv6Address('fd55:5555::70') ],
                                    #[ 'Telenor', 'eth0', IPv4Address('169.254.100.70'), IPv6Address('::') ]
                                 #], 'Uninett', 'eth0', dnsServers, ntpServers)
      #siteAlphaPCUID = makeNorNetPCU(siteAlpha, 'pcu', 'simula.nornet', IPv4Address('132.252.156.2'),
                                     #'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')



# ###### Remove site ########################################################
def removeSite(site):
   removeNorNetSite(site['site_long_name'])


# ###### Add site ###########################################################
def makeSite(site, norNetInformation, dnsServers, ntpServers):
   # ====== Add tag types ===================================================
   makeNorNetTagTypes()

   # ====== Make site ========================================================
   siteIndex = site['site_index']

   newSite = makeNorNetSite(site['site_long_name'], site['site_short_name'], str.lower(site['site_short_name']),
                            site['site_url'], site['site_domain'], siteIndex,
                            site['site_city'], site['site_province'], site['site_country'], site['site_country_code'],
                            site['site_latitude'], site['site_longitude'],
                            site['site_providers'],
                            site['site_providers'][0][0], site['site_providers'][0][1],
                            dnsServers, ntpServers)
   newPCU = makeNorNetPCU(newSite, 'pcu', site['site_domain'],
                          site['site_pcu'][0], site['site_pcu'][1], site['site_pcu'][2],
                          'ssh', 'Amiga 5099', 'Jeg vet ikke.')

   # ====== Make nodes ======================================================
   i = 100
   for node in site['site_nodes']:
      address = node[0]
      if address <= 0:
         address = i
      port    = node[1]
      if port <= 0:
        port = i
      makeNorNetNode(newSite, node[2], address, newPCU, port, 'eth0', 'Amiga 5000', 'reinstall')



# ###### Make test setup ####################################################
def createTestConfiguration(userName, sliceName, action):
   if (action == 'create-all' or action == 'renew-all'):
      siteAlphaNorNetIndex = 1
      siteAlpha = makeNorNetSite('Simula Research Laboratory', 'SRL', 'srl', 'http://www.simula.nornet', 'simula.nornet',
                                 siteAlphaNorNetIndex, 'Fornebu', 'Østlandet', 'Norge', 'NO', 59.895933, 10.627635, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.70'), IPv6Address('fd55:5555::70') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.70'), IPv6Address('::') ]
                                 ], 'Uninett', 'eth0', dnsServers, ntpServers)
      siteAlphaPCUID = makeNorNetPCU(siteAlpha, 'pcu', 'simula.nornet', IPv4Address('132.252.156.2'),
                                     'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      siteBetaNorNetIndex = 2
      siteBeta  = makeNorNetSite('Universitetet i Stavanger', 'UiS', 'uis', 'http://www.uis.nornet', 'uis.nornet',
                                 siteBetaNorNetIndex, 'Stavanger',  'Rogaland', 'Norge', 'NO', 58.940799,5.703049, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.71'), IPv6Address('fd55:5555::71') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.71'), IPv6Address('::') ]
                                 ], 'Uninett', 'eth0', dnsServers, ntpServers)
      siteBetaPCUID = makeNorNetPCU(siteBeta, 'pcu', 'uis.nornet', IPv4Address('132.252.156.3'),
                                    'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      siteGammaNorNetIndex = 3
      siteGamma = makeNorNetSite('Universität Duisburg-Essen', 'UDE', 'ude', 'http://www.ude.nornet', 'ude.nornet',
                                 siteGammaNorNetIndex, 'Essen',  'Nordrhein-Westfalen', 'Deutschland', 'DE', 51.476144, 7.011656, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.72'), IPv6Address('::') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.72'), IPv6Address('::') ],
                                    [ 'Deutsches Forschungsnetz', 'eth0', IPv4Address('172.31.255.72'),  IPv6Address('::') ]
                                 ], 'Deutsches Forschungsnetz', 'eth0', dnsServers, ntpServers)
      siteGammaPCUID = makeNorNetPCU(siteGamma, 'pcu', 'ude.nornet', IPv4Address('132.252.156.4'),
                                     'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      siteDeltaNorNetIndex = 4
      siteDelta = makeNorNetSite('Universitetet i Tromsø', 'UiT', 'uit', 'http://www.uit.nornet', 'uit.nornet',
                                 siteDeltaNorNetIndex, 'Tromsø',  'Troms', 'Norge', 'NO', 69.681897,18.980541, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.73'), IPv6Address('::') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.73'), IPv6Address('::') ]
                                 ], 'Uninett', 'eth0', dnsServers, ntpServers)
      siteDeltaPCUID = makeNorNetPCU(siteDelta, 'pcu', 'uit.nornet', IPv4Address('132.252.156.5'),
                                     'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      siteEpsilonNorNetIndex = 5
      siteEpsilon = makeNorNetSite('Universitetet i Trondheim', 'NTNU', 'ntnu', 'http://www.ntnu.nornet', 'ntnu.nornet',
                                 siteEpsilonNorNetIndex, 'Trondheim',  'Sør-Trøndelag', 'Norge', 'NO', 63.419034,10.4022, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.74'), IPv6Address('::') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.74'), IPv6Address('::') ]
                                 ], 'Uninett', 'eth0', dnsServers, ntpServers)
      siteEpsilonPCUID = makeNorNetPCU(siteEpsilon, 'pcu', 'ntnu.nornet', IPv4Address('132.252.156.6'),
                                     'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      # ====== Add test nodes ==================================================
      firstAddressIndex = 100

      names = sorted(['akerbrygge', 'bygdoey', 'ekeberg', 'fornebu', 'frogner', 'grefsen', 'majorstuen', 'ullevaal'])
      i = 0
      for name in names:
         n = makeNorNetNode(siteAlpha, name, i + firstAddressIndex,
                            siteAlphaPCUID, 1 + i, 'eth0',
                            'Amiga 5000', 'reinstall')
         i = i + 1

      firstAddressIndex = 100
      names = sorted(['aaklungen', 'bjordammen', 'maridalsvannet', 'sognsvann', 'svartkulp', 'skjennungen', 'trollvann', 'tryvann'])
      i = 0
      for name in names:
         makeNorNetNode(siteBeta, name, i + firstAddressIndex,
                        siteBetaPCUID, 1 + i, 'eth0',
                        'Amiga 5000', 'reinstall')
         i = i + 1

      firstAddressIndex = 100
      names = sorted(['altenessen', 'baldeneysee', 'borbeck', 'kettwig', 'kray', 'kupferdreh', 'steele', 'zollvererin'])
      i = 0
      for name in names:
         makeNorNetNode(siteGamma, name, i + firstAddressIndex,
                        siteGammaPCUID, 1 + i, 'eth0',
                        'Amiga 5000', 'reinstall')
         i = i + 1

      firstAddressIndex = 100
      names = sorted(['roed', 'groenn', 'blaa', 'graa', 'svart', 'hvit', 'orange', 'gull'])
      i = 0
      for name in names:
         makeNorNetNode(siteDelta, name, i + firstAddressIndex,
                        siteDeltaPCUID, 1 + i, 'eth0',
                        'Amiga 5000', 'reinstall')
         i = i + 1

      firstAddressIndex = 100
      names = sorted(['troll', 'nisse', 'katt', 'hund', 'mus', 'sau', 'bjoern', 'reinsdyr'])
      i = 0
      for name in names:
         makeNorNetNode(siteEpsilon, name, i + firstAddressIndex,
                        siteEpsilonPCUID, 1 + i, 'eth0',
                        'Amiga 5000', 'reinstall')
         i = i + 1


   if action == 'add-test1':
      siteRhoNorNetIndex = 6
      siteRho = makeNorNetSite('Universitetet på Svalbard', 'UNIS', 'unis', 'http://www.svalbard.nornet', 'svalbard.nornet',
                                 siteRhoNorNetIndex, 'Longyearbyen',  'Svalbard', 'Norge', 'NO', 78.222972,15.648537, [
                                    [ 'Uninett', 'eth0', IPv4Address('132.252.156.75'), IPv6Address('::') ],
                                    [ 'Telenor', 'eth0', IPv4Address('169.254.100.75'), IPv6Address('::') ]
                                 ], 'Uninett', 'eth0', dnsServers, ntpServers)
      siteRhoPCUID = makeNorNetPCU(siteRho, 'pcu', 'svalbard.nornet', IPv4Address('132.252.156.7'),
                                     'pcu-root', 'a-secret-password', 'ssh', 'Amiga 5099', 'Jeg vet ikke.')

      firstAddressIndex = 100
      names = sorted(['isbjoern', 'hval'])
      i = 0
      for name in names:
         makeNorNetNode(siteRho, name, i + firstAddressIndex,
                        siteRhoPCUID, 1 + i, 'eth0',
                        'Amiga 5000', 'reinstall')
         i = i + 1


   # ====== Add person to all test sites ====================================
   personID = lookupPersonID(userName)
   if personID == 0:
      error('Unable to find user ' + userName + '\n')
   getPLCServer().AddRoleToPerson(getPLCAuthentication(), 'user', personID)
   getPLCServer().AddRoleToPerson(getPLCAuthentication(), 'pi',   personID)
   getPLCServer().AddRoleToPerson(getPLCAuthentication(), 'tech', personID)

   allNorNetSites = fetchNorNetSiteList()
   for siteIndex in allNorNetSites:
      site = allNorNetSites[siteIndex]
      getPLCServer().AddPersonToSite(getPLCAuthentication(), personID, site['site_id'])
      if site['site_id'] == NorNet_SiteIndex_Central:
         getPLCServer().SetPersonPrimarySite(getPLCAuthentication(), personID, site['site_id'])


   # ====== Add slice to all nodes ==========================================
   sliceID = lookupSliceID(sliceName)
   if sliceID == 0:
      error('Unable to find slice ' + sliceName + '\n')
   nodeIDs = []
   allNorNetNodes = fetchNorNetNodeList()
   for nodeIndex in allNorNetNodes:
      node = allNorNetNodes[nodeIndex]
      nodeIDs.append(int(node['node_id']))
   getPLCServer().AddSliceToNodes(getPLCAuthentication(), sliceID, nodeIDs)



# ###### Main program #######################################################
action = ''
if len(sys.argv) > 2:
   if sys.argv[1] == 'add':
      action = 'add'
   elif sys.argv[1] == 'renew':
      action = 'renew'
   elif sys.argv[1] == 'remove':
      action = 'remove'
if action == '':
   error('Usage: ' + sys.argv[0] + ' [add|remote] [Site] ...')


log('***** Welcome to NorNet! *****')
loginToPLC()


# ====== Some server settings ===============================================
norNetInformation = getNorNetInformationForAddress(getPLCAddress())
plcNodeIndex      = norNetInformation['node_index']
dnsServers = [ makeNorNetIP(NorNet_SiteIndex_Central, NorNet_CentralSite_BootstrapProviderIndex, plcNodeIndex, -1, 4),
               makeNorNetIP(NorNet_SiteIndex_Central, NorNet_CentralSite_BootstrapProviderIndex, plcNodeIndex, -1, 6) ]
ntpServerNames = [ 'ntp1.ptb.de', 'ntp2.ptb.de', 'ntp3.ptb.de',   # The PTB servers (very reliable sources)
                   'ntp1.uio.no', 'ntp2.uio.no' ]                 # UiO (nearby)

ntpServers = []
for ntpServer in ntpServerNames:
   ntpAddress = resolveHostname(ntpServer, AF_INET6)
   if ntpAddress != None:
      ntpServers.append(ntpAddress)
   ntpAddress = resolveHostname(ntpServer, AF_INET)
   if ntpAddress != None:
      ntpServers.append(ntpAddress)
# ===========================================================================


# ====== Add tag types ======================================================
if ((action == 'add') or (action == 'renew')):
   makeNorNetTagTypes()


# ====== Remove or create sites =============================================
i = 2
while i < len(sys.argv):
   found = None
   for site in norNetSetup:
      #site = norNetSetup[siteNumber]
      print site
      if ((site['site_long_name'] == sys.argv[i]) or
          (site['site_short_name'] == sys.argv[i])):
         found = site
         break

   if found == None:
      error('Site "' + sys.argv[i] + '" is not defined!')

   if ((action == 'remove') or (action == 'renew')):
      removeSite(found)
   if ((action == 'add') or (action == 'renew')):
      makeSite(found, norNetInformation, dnsServers, ntpServers)

   i = i + 1
