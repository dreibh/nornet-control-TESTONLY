#!/bin/bash -e
#
# Build LXC Repository
# Copyright (C) 2013 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#

SOURCES="$HOME/src/build"
DISTRIBUTION="fedora/18/x86_64"

REPOSITORIES="$HOME/repos/lxc"             # Destination
KERNEL_RPMS_SOURCE_REPOSITORY="$HOME/repos/nornet"   # Source of Kernel RPMs
KERNEL_VERSION=`uname -r`

CLEAN=0
if [ "$1" = "-clean" ] ; then
   CLEAN=1
elif [ "$1" = "-noclean" ] ; then
   CLEAN=0
else
   echo >&2 "Usage: $0 -clean|-noclean [make_option ...]"
   exit 1
fi
shift


# ====== Prepare sources ====================================================
echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Preparing sources ...\x1b[0m"
mkdir -p "$REPOSITORIES/$DISTRIBUTION/RPMS"
mkdir -p "$REPOSITORIES/$DISTRIBUTION/SRPMS"

cd "$SOURCES"
if [ $CLEAN -eq 1 ] ; then
   echo -e "\x1b[1;32m`date +%FT%H:%M:%S`: make stage1=true distclean ...\x1b[0m"
   sudo env LANG=C make PLDISTRO=lxc stage1=true distclean || true
   echo -e "\x1b[1;32m`date +%FT%H:%M:%S`: make stage1=true ...\x1b[0m"
   env LANG=C make PLDISTRO=lxc stage1=true || env LANG=C make PLDISTRO=lxc stage1=true
fi


echo -e "\x1b[1;32m`date +%FT%H:%M:%S`: Applying fixes ...\x1b[0m"

# Some checks do not work in the build environment!
sed -e "s/^\(make check\)/true   # \$1/g" <SPECS/libvirt.spec >libvirt.spec.new
# colordiff libvirt.spec.new SPECS/libvirt.spec
sudo mv libvirt.spec.new SPECS/libvirt.spec


# ====== Copy kernel packages ===============================================
echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Copying kernel packages ...\x1b[0m"
KERNEL_RPMS=`find "$KERNEL_RPMS_SOURCE_REPOSITORY/$DISTRIBUTION" -name "kernel*$KERNEL_VERSION*.rpm"`
if [ "$KERNEL_RPMS" = "" ] ; then
   echo >&2 "ERROR: There seem to be no kernel RPMs in $KERNEL_RPMS_SOURCE_REPOSITORY/$DISTRIBUTION!"
   exit 1
fi
mkdir -p "$SOURCES/RPMS/"
cp $KERNEL_RPMS "$SOURCES/RPMS/"


# ====== Build packages =====================================================
echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Building packages ...\x1b[0m"
sudo env LANG=C make PLDISTRO=lxc $@


# ====== Update repository's files ==========================================
echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Copying packages to repository ...\x1b[0m"

pwd
cp -r RPMS/x86_64/* $REPOSITORIES/$DISTRIBUTION/RPMS/
cp -r RPMS/noarch/* $REPOSITORIES/$DISTRIBUTION/RPMS/
cp -r SRPMS/* $REPOSITORIES/$DISTRIBUTION/SRPMS/


# ====== Update repository management files =================================
echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Updating repository ...\x1b[0m"
oldPackages=`repomanage --keep=2 --old "$REPOSITORIES/$DISTRIBUTION"`
for oldPackage in $oldPackages ; do
   echo "Removing $oldPackage"
   rm -rf "$oldPackage"
done
createrepo "$REPOSITORIES/$DISTRIBUTION" --update
tree $REPOSITORIES/

echo -e "\x1b[1;34m`date +%FT%H:%M:%S`: Successfully completed package creation!\x1b[0m"
