#!/bin/bash -e

. ./debian.conf


# ====== Get variant ========================================================

VARIANT="$1"        # e.g. nornet-stable nornet-testing nornet-experimental
BUILD_SUFFIX="$2"   # e.g. debug0001

VARIANTS="nornet-stable nornet-testing nornet-experimental"
PACKAGE_SUFFIX=""
if [ "$VARIANT" != "" ] ; then
   for v in $VARIANTS ; do
      if [ "$v" = "$VARIANT" ] ; then
         PACKAGE_SUFFIX="-${VARIANT}"
         break
      fi
   done
   if [ "$PACKAGE_SUFFIX" = "" ] ; then
      echo >&2 "Usage: $0 variant"
      echo "Possible variants are: $VARIANTS"
      exit 1
   fi
fi


# ====== Revert debian/changelog and debian/control =========================
rm -f LocalConfig.kmk
if [ -e ".svn" ] ; then
   # Get SVN version identifier
   SVN_VERSION="`svnversion . | tr -d [M]`"
   BUILD_VERSION_IDENTIFIER="svn`printf "%07d" "${SVN_VERSION}"`${BUILD_SUFFIX}"
else
   echo "*** Not an SVN repository ***"
   # No special SVN version
   SVN_VERSION="0000000"
   BUILD_VERSION_IDENTIFIER="${BUILD_SUFFIX}"
fi

# When running the first time, backup the original Debian files
if [ ! -e debian/changelog.orig ] ; then
   cp debian/changelog debian/changelog.orig
fi
if [ ! -e debian/control.orig ] ; then
   cp debian/control debian/control.orig
fi
if [ ! -e debian/rules.orig ] ; then
   cp debian/rules debian/rules.orig
fi
# if [ ! -e debian/LocalConfig.kmk.orig ] ; then
#    cp debian/LocalConfig.kmk debian/LocalConfig.kmk.orig
# fi


# Revert Debian files (from the backup versions)
cp debian/changelog.orig debian/changelog
cp debian/control.orig debian/control
cp debian/rules.orig debian/rules
# cp debian/LocalConfig.kmk.orig debian/LocalConfig.kmk


echo -e "\x1b[34mBUILD_VERSION_IDENTIFIER: $BUILD_VERSION_IDENTIFIER\x1b[0m"


# ====== Current SVN version ================================================
CHANGELOG_HEADER="`head -n1 debian/changelog`"

# The package name, e.g. MyApplication
PACKAGE=`echo $CHANGELOG_HEADER | sed -e "s/(.*//" -e "s/ //g"`

# The package distribution, e.g. precise, raring, ...
PACKAGE_DISTRIBUTION=`echo $CHANGELOG_HEADER | sed -e "s/[^)]*)//" -e "s/;.*//g" -e "s/ //g"`
# The package's version, e.g. 1.2.3-1ubuntu1
PACKAGE_VERSION=`echo $CHANGELOG_HEADER | sed -e "s/.*(//" -e "s/).*//" -e "s/ //g" -e "s/ //g"`
# The package's output version, e.g. 1.2.3-1ubuntu
OUTPUT_VERSION=`echo $PACKAGE_VERSION   | sed -e "s/\(ubuntu\)[0-9]*$/\1/"`
# The package's Debian version, e.g. 1.2.3-1
DEBIAN_VERSION=`echo $OUTPUT_VERSION    | sed -e "s/ubuntu$//1"`
# The package's upstream version, e.g. 1.2.3
UPSTREAM_VERSION=`echo $DEBIAN_VERSION  | sed -e "s/-[0-9]*$//"`
# The package's plain upstream version, e.g. 1.2.3 (without e.g. ~svn<xxxx>)
PLAIN_VERSION=`echo $UPSTREAM_VERSION   | sed -e "s/\([0-9\.]*\)[-+~].*$/\1/"`


echo -e "\x1b[34m######################################################################\x1b[0m"
echo -e "\x1b[34mCHANGELOG_HEADER:     $CHANGELOG_HEADER\x1b[0m"
echo -e "\x1b[34mPACKAGE:              $PACKAGE\x1b[0m"
echo -e "\x1b[34mPACKAGE_DISTRIBUTION: $PACKAGE_DISTRIBUTION\x1b[0m"
echo -e "\x1b[34mPACKAGE_VERSION       $PACKAGE_VERSION\x1b[0m"
echo -e "\x1b[34mOUTPUT_VERSION:       $OUTPUT_VERSION\x1b[0m"
echo -e "\x1b[34mDEBIAN_VERSION:       $DEBIAN_VERSION\x1b[0m"
echo -e "\x1b[34mUPSTREAM_VERSION:     $UPSTREAM_VERSION\x1b[0m"
echo -e "\x1b[34mPLAIN_VERSION:        $PLAIN_VERSION\x1b[0m"
echo -e "\x1b[34m######################################################################\x1b[0m"


# ====== Create debian/changelog ============================================
(
   echo "${PACKAGE}${PACKAGE_SUFFIX} (${PLAIN_VERSION}${BUILD_VERSION_IDENTIFIER}-1ubuntu1) ${PACKAGE_DISTRIBUTION}; urgency=medium"
   echo ""
   echo "  * New Debian package from SVN revision ${SVN_VERSION}."
   echo ""
   echo " -- $MAINTAINER  `env LANG=C date +"%a, %02d %b %Y %H:%M:%S %z"`"
   echo ""
   sed <debian/changelog -e "s/^${PACKAGE} /${PACKAGE}${PACKAGE_SUFFIX} /g"
) >debian/changelog.new


# ====== Copy package files =================================================
BUILD_PACKAGES=`grep "^Package: " debian/control.orig | sed -e "s/Package: //g"`
cd debian
echo "" >package-names.sed
for buildPackage in $BUILD_PACKAGES ; do
   buildPackageFiles=`find . -maxdepth 1 -name "${buildPackage}.*" -printf '%f\\n'`
   echo "P=${buildPackage}" 
   for buildPackageFile in $buildPackageFiles ; do
      targetPackageFile=`echo "${buildPackageFile}" | sed -e "s/^${buildPackage}/${buildPackage}${PACKAGE_SUFFIX}/g"`
      if [ "${buildPackageFile}" != "${targetPackageFile}" ] ; then
         if [ -e "${targetPackageFile}" ] ; then
            rm -rf "${targetPackageFile}"
         fi
         cp -a "${buildPackageFile}" "${targetPackageFile}"
      fi
   done
   echo "s/${buildPackage}$/${buildPackage}${PACKAGE_SUFFIX}/g" >>package-names.sed
   echo "s/${buildPackage}[ \t]/${buildPackage}${PACKAGE_SUFFIX} /g" >>package-names.sed
done
cd ..


# ====== Change debian/control ==============================================
conflicts=""
for v in $VARIANTS ; do
   if [ "$v" != "$VARIANT" ] ; then
      if [ "$conflicts" = "" ] ; then
         conflicts="$v"
      else
         conflicts="$conflicts,$v"
      fi
   fi
done
(
#       -e "s/Source: ${PACKAGE}/Source: ${PACKAGE}${PACKAGE_SUFFIX}/g" \
#       -e "s/^Package: \([a-zA-Z0-9+-]*\)$/Package: \1${PACKAGE_SUFFIX}\nConflicts: ${conflicts}\nReplaces: ${conflicts}/g"
   sed <debian/control \
      -f debian/package-names.sed \
      -e "s/^Maintainer:.*/Maintainer: $MAINTAINER/g" \
      -e "s/: Oracle VM /: Open Source /g"
) >debian/control.new


# ====== Change debian/rules ================================================
(
#       -e "s/--disable-extpack/--disable-extpack --disable-kmods/g" \
#       -e "s/^#[ \t]*\(VNC=1[ \t]*\)/\1/g" \
#       -e "s/^#[ \t]*\(OSE=1[ \t]*\)/\1/g" \
   sed <debian/rules \
      -e "s/^\(verpkg[ \t]*\):=[ \t]*${PACKAGE}/\1:= ${PACKAGE}${PACKAGE_SUFFIX}/g" \
      -e "s/^\(psource\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(gsource\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(pdkms\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(gdkms\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(sname\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(sxname\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(gname\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(uname\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g" \
      -e "s/^\(uxname\):=\([a-zA-Z0-9+-]*\)$/\1 := \2${PACKAGE_SUFFIX}/g"
) >debian/rules.new


# # ====== Change debian/LocalConfig.kmk ======================================
# (
#    cat debian/LocalConfig.kmk
#    echo ""
# #    echo "VBOX_WITH_EXTPACK_VNC := 1"
# #    echo "VBOX_BUILD_PUBLISHER = ${BUILD_VERSION_IDENTIFIER}"
# ) >debian/LocalConfig.kmk.new


# ====== Write LocalConfig.kmk ==============================================
(
   echo ""
   echo "VBOX_BUILD_PUBLISHER = ${BUILD_VERSION_IDENTIFIER}"
) >LocalConfig.kmk


# ====== Apply changes ======================================================
mv debian/changelog.new       debian/changelog
mv debian/control.new         debian/control
mv debian/rules.new           debian/rules
# mv debian/LocalConfig.kmk.new debian/LocalConfig.kmk
