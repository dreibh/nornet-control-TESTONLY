#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Get all sites
# Copyright (C) 2012-2014 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

import re;
import os;
import base64;

# NorNet
from NorNetSiteSetup import *;
from NorNetTools     import *;
from NorNetAPI       import *;


# ###### Get NorNet node object for sliver ##################################
def makePseudoNode(nodeName, site, nodeIndex, model):
   dnsName = makeNameFromUnicode(nodeName)
   norNetNode = {
      'node_site_id'          : site['site_id'],
      'node_index'            : int(nodeIndex),
      'node_name'             : dnsName['ascii'] + '.' + site['site_domain'],
      'node_utf8'             : dnsName['utf8']  + '.' + site['site_domain'],
      'node_nornet_interface' : None,
      'node_model'            : model,
      'node_state'            : 'SLIVER',
      'node_tags'             : []
   }
   return norNetNode


# ###### Reserve address ####################################################
addressList = []
def reserve(address):
   if address in addressList:
      error('Address ' + str(address) + ' is already reserved!')
   addressList.append(address)


# ###### Main program #######################################################
loginToPLC(quietMode = True)

siteList  = fetchNorNetSite(None)
nodeList  = fetchNorNetNode(None)
sliceList = fetchNorNetSlice(None)

# ====== Handle slices ======================================================
if sliceList == None:
   print 'ERROR: Slice list is empty?! Missing NorNet patch?'
   sys.exit(1)

sliverNodeList = []
for slice in sliceList:
   for node in nodeList:
      if node['node_id'] in slice['slice_node_ids']:
         sliceDNSName   = str.replace(slice['slice_name'], '_', '-')
         sliceHostname  = sliceDNSName + '.' + getHostnameFromFQDN(node['node_utf8'])
         sliceNodeIndex = getSliceNodeIndexOfNorNetSlice(slice, node)
         sliceNode = makePseudoNode(sliceHostname,
                                    getNorNetSiteOfNode(siteList, node),
                                    node['node_index'],
                                    node['node_model'])
         # Add a pseudo entry to create a slice address later
         sliceNode['pseudo_slice_node_index'] = getSliceNodeIndexOfNorNetSlice(slice, node)
         sliverNodeList.append(sliceNode)


nodeList       = sorted(nodeList, key = lambda x: x['node_index'])
sliverNodeList = sorted(sliverNodeList, key = lambda x: x['node_index'])

for siteIndex in siteList:
   site = siteList[siteIndex]
   #print site
   siteIndex       = site['site_index']
   siteName        = site['site_utf8']
   providerList    = getNorNetProvidersForSite(site)
   siteTagsList    = site['site_tags']
   siteCountryCode = ''
   siteCountry     = ''
   siteProvince    = ''
   siteCity        = ''

   for siteTag in siteTagsList:
      if siteTag['tagname'] == 'nornet_site_country_code':
         siteCountryCode = siteTag['value']
      elif siteTag['tagname'] == 'nornet_site_country':
         siteCountry = siteTag['value']
      elif siteTag['tagname'] == 'nornet_site_province':
         siteProvince = siteTag['value']
      elif siteTag['tagname'] == 'nornet_site_city':
         siteCity = siteTag['value']

   print(str(siteIndex) + ' ' + \
         fill(siteName, 32) + ' ' + siteCountryCode+ ' ' + siteCountry+ ' ' + siteProvince+ ' ' + siteCity)


   for node in nodeList:
      if node['node_site_id'] == site['site_id']:
         #print node
         nodeIndex = node['node_index']
         nodeName  = node['node_name']
         nodeUTF8  = node['node_utf8']
         nodeState = node['node_state']

         nodeFC = 'NA'
         nodePL = 'NA'
         nodeTagsList = node['node_tags']
         for nodeTag in nodeTagsList:
            if nodeTag['tagname'] == 'fcdistro':
               nodeFC = nodeTag['value']
            if nodeTag['tagname'] == 'pldistro':
               nodePL = nodeTag['value']

         print(str(nodeIndex) + ' ' + fill(nodeUTF8,32) + ' ' + fill(nodeName,32) + ' ' + fill(nodeState,10) + ' ' + fill(nodeFC,4) + ' ' + fill(nodePL,6))


         # ====== Obtain the address ==================================
         print '   ROOT:'
         for onlyDefault in [ True, False ]:
            for providerIndex in providerList:
               if ( ((onlyDefault == True)  and (providerIndex == site['site_default_provider_index'])) or \
                     ((onlyDefault == False) and (providerIndex != site['site_default_provider_index'])) ):

                  provider = providerList[providerIndex]
                  #print provider

                  ifIPv4 = makeNorNetIP(providerIndex, siteIndex, nodeIndex, 4, 0).ip
                  ifIPv6 = makeNorNetIP(providerIndex, siteIndex, nodeIndex, 6, 0).ip
                  reserve(ifIPv4)
                  reserve(ifIPv6)

                  print '\t' + provider['provider_long_name'] + '\t' + str(ifIPv4) + ' ' + str(ifIPv6)


         print '   SLIVERS:'
         sliversOfNode = []
         for sliverNode in sliverNodeList:
            if ((sliverNode['node_site_id'] == site['site_id']) and
                (sliverNode['node_index'] == nodeIndex)):
               print '\t' + sliverNode['node_name'] + '\t' + str(sliverNode['pseudo_slice_node_index'])

               sliceNodeIndex = sliverNode['pseudo_slice_node_index']
               for onlyDefault in [ True, False ]:
                  for providerIndex in providerList:
                     if ( ((onlyDefault == True)  and (providerIndex == site['site_default_provider_index'])) or \
                           ((onlyDefault == False) and (providerIndex != site['site_default_provider_index'])) ):
                        provider = providerList[providerIndex]

                        ifIPv4 = makeNorNetIP(providerIndex, siteIndex, nodeIndex, 4, sliceNodeIndex).ip
                        ifIPv6 = makeNorNetIP(providerIndex, siteIndex, nodeIndex, 6, sliceNodeIndex).ip
                        reserve(ifIPv4)
                        reserve(ifIPv6)

                        print '\t' + provider['provider_long_name'] + '\t' + str(ifIPv4) + ' ' + str(ifIPv6)
