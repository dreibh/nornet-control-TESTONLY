#!/bin/bash

# ###### Perform Python package upgrades with PIP ###########################
run-upgrade ()
{
   local sudo=""
   if [ "$1" != "" ] ; then
      sudo="$1 "
   fi
   local options=" $2"

   local pip
   for pip in pip pip3 ; do
      # ====== Check for PIP ================================================
      if [ -x /usr/local/bin/${pip} ] ; then
         # Prefer to use PIP-installed version of PIP
         pipCommand=/usr/local/bin/${pip}
      elif [ -x /usr/bin/${pip} ] ; then
         # Otherwise, try OS-installed version of PIP
         pipCommand=/usr/bin/${pip}
      else
         # Not found -> nothing to do!
         continue
      fi


      # ====== Perform upgrades =============================================
      echo "Running PIP by using \"${sudo}${pipCommand} ...\""
      ${sudo} ${pipCommand} list --outdated --format=freeze | grep -v '^\-e' | cut -d = -f 1 | xargs -r -- ${sudo} ${pipCommand} install --quiet --upgrade ${options} &
   done
}



# ###### Main program #######################################################

# ====== Run as superuser ===================================================
run-upgrade "sudo -H"

# ====== Run as user, if script is run as user ==============================
if [ "${SUDO_USER}" != "" -a "${SUDO_GID}" != "" ] ; then
   run-upgrade "sudo -u ${SUDO_USER} -g#${SUDO_GID}" --user
fi

wait
