#!/bin/bash

OLD="4.4.81-800.fc25"
NEW="4.4.84-888.fc25"

new=`echo "$NEW" | sed -e "s/-/./g"`
old=`echo "$OLD" | sed -e "s/-/./g"`

while [ $# -gt 0 ] ; do
   echo "Handling $1 ..."
   (
      #echo "service nm restart"
      #echo "NodeUpdate.py"
      #echo "uname -a"
      #echo "yum clean all"
      #echo "NodeUpdate.py"

      cat <<EOF
      # Fix overwritten sysctl settings:
      # !!! Check /var/www/html/PlanetLabConf/sysctl.conf on PLC !!!
      service nornet-research-node status
      
      #  Work-around for "sliver without active eth0":
      cd /vservers
      find -maxdepth 1 -name "[a-z0-9]*" -type d -printf "%f\n" | xargs -n1 -iยง lxcsu ยง 'echo "ยง" && ifconfig eth0 | grep "inet " || ( echo "SOMETHING IS WRONG in ยง!" && sudo rm -f /etc/sysconfig/network-scripts/ifcfg-eth0 )'
      service nm restart
      
      # Install updates
      NodeUpdate.py
      
      # Ensure kernel is up to date
      dnf install -y kernel-core-$NEW.x86_64 kernel-$NEW.x86_64 kernel-modules-$NEW.x86_64 kernel-modules-extra-$NEW.x86_64 transforward

      # Get rid of obsolete kernel
      kernel=\$(uname -r)
      echo "K=\$kernel"
      if [ -e "/boot/vmlinuz-$NEW.x86_64" ] ; then
         if [ "\$kernel" = "$OLD.x86_64" ] ; then
            echo "OLD KERNEL -> Reboot!"
            rpm -ehv kernel-core-$OLD.x86_64 kernel-$OLD.x86_64 kernel-modules-$OLD.x86_64 kernel-modules-extra-$OLD.x86_64   # transforward-\*-$old.\*.nornet
            reboot
         else
            echo "Different kernel!"
            rpm -ehv kernel-core-$OLD.x86_64 kernel-$OLD.x86_64 kernel-modules-$OLD.x86_64 kernel-modules-extra-$OLD.x86_64   # transforward-\*-$old.\*.nornet
         fi
      fi
EOF

   ) | sudo ssh -4 -o StrictHostKeyChecking=no -i /etc/planetlab/root_ssh_key.rsa root@$1 &
   shift
done
wait
