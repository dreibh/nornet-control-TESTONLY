#!/bin/bash -e
#
# Kernel Test Script
# Copyright (C) 2016 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


# ====== Repository clean =================================
git clean -x -d -f
cp $HOME/kernel-config .config


# # ====== Fix PIE compile problem for GCC 6.x ============
# cat >Makefile.patch <<EOF
# diff --git a/Makefile b/Makefile
# index 137679c..ce0c477 100644
# --- a/Makefile
# +++ b/Makefile
# @@ -611,6 +611,12 @@ include arch/\$(SRCARCH)/Makefile
#  
#  KBUILD_CFLAGS  += \$(call cc-option,-fno-delete-null-pointer-checks,)
#  
# +# force no-pie for distro compilers that enable pie by default
# +KBUILD_CFLAGS += \$(call cc-option, -fno-pie)
# +KBUILD_CFLAGS += \$(call cc-option, -no-pie)
# +KBUILD_AFLAGS += \$(call cc-option, -fno-pie)
# +KBUILD_CPPFLAGS += \$(call cc-option, -fno-pie)
# +
#  ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
#  KBUILD_CFLAGS  += -Os \$(call cc-disable-warning,maybe-uninitialized,)
#  else
# EOF
# 
# git checkout Makefile
# patch -p1 <Makefile.patch


# ====== Clean ============================================
make-kpkg --rootcmd fakeroot clean


# ====== Version check ====================================
make kernelrelease

if [ "`make kernelrelease`" != "`make kernelversion`" ] ; then
   echo >&2 "ERROR: Versioning issues - packaging will not work properly!"
   echo "Version  `make kernelversion`"
   echo "Release: `make kernelrelease`"
   exit 1
fi

# make kernelversion >include/config/kernel.release
# make kernelversion >.kernelrelease


# ====== "Kernel Package" =================================
# Using the Git version here.
# NOTE: kernel-package/kernel (sub-directory!) corresponds to
#       /usr/share/kernel-package
if [ ! -e $HOME/src/kernel-package -o ! -e $HOME/src/kernel-package/kernel ] ; then
   echo >&2 "ERROR: $HOME/src/kernel-package or $HOME/src/kernel-package/kernel does not exist!"
   echo >&2 "Use: git clone https://github.com/dreibh/kernel-package.git $HOME/src/kernel-package"
   exit 1
fi


make-kpkg --rootcmd fakeroot \
   --overlay-dir $HOME/src/kernel-package/kernel \
   --stem linux \
   --initrd  \
   --revision 8 \
   # --append-to-version "-mptcp"   #  --revision "3000"

#    --overlay-dir $HOME/src/kernel-package \
# \   buildpackage


debian/rules debian/stamp/pre-config-common


echo 'Building Package' >stamp-building
test ! -e scripts/package/builddeb || mv -f scripts/package/builddeb scripts/package/builddeb.kpkg-dist
test ! -e scripts/package/Makefile ||              \
    test -f scripts/package/Makefile.kpkg-dist ||  \
    (mv -f scripts/package/Makefile scripts/package/Makefile.kpkg-dist && \
       (echo "# Dummy file "; echo "help:") >  scripts/package/Makefile)

export MAINTAINER="Thomas Dreibholz <dreibh@iem.uni-due.de>"
export CONCURRENCY_LEVEL=`getconf _NPROCESSORS_ONLN`
dpkg-buildpackage -S -sa -k"${MAINTAINER}" -rfakeroot -I.git -I.gitignore -i'\.git.*'

test ! -f scripts/package/builddeb.kpkg-dist ||   mv -f scripts/package/builddeb.kpkg-dist scripts/package/builddeb
test ! -f scripts/package/Makefile.kpkg-dist ||   mv -f scripts/package/Makefile.kpkg-dist scripts/package/Makefile
rm -f stamp-building
