#!/bin/bash -e
#
# Tunnelbox Setup
# Copyright (C) 2012 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no
#


state="$1"
bootstrap="$2"

if [ "$state" != "start" -a "$state" != "stop" -a \
     "$state" != "restart" -a "$state" != "status" -a "$state" != "reset" -a "$state" != "coldstart" ] ; then
   echo >&2 "Usage: $0 start|stop|status|reset|coldstart [-bootstrap]"
   exit 1
fi


WORK_DIRECTORY="."
if [ ! -e "$WORK_DIRECTORY/Routing-Setup" ] ; then
   echo >&2 "ERROR: $WORK_DIRECTORY/Routing-Setup not found!"
   exit 1
fi
. ./$WORK_DIRECTORY/Routing-Setup


if [ "$state" = "reset" -o "$state" = "coldstart" ] ; then
   for version in 4 6 ; do
      ip -${version} rule flush
      ip -${version} rule del lookup local || true
      ip -${version} rule add from all lookup local   pref 0
      ip -${version} rule add from all lookup main    pref 32766
      ip -${version} rule add from all lookup default pref 32767
   done
   ip route flush cache
   iptables -t nat -F POSTROUTING
   if [ "$state" = "coldstart" ] ; then
      state="restart"
   else
      state="stop"
   fi
fi


success=1
if [ "$bootstrap" = "-bootstrap" ] ; then
    log "Entering BOOTSTRAP ..."
    . ./tunnelbox-bootstrap || success=0
    log-action "Finished BOOTSTRAP ..."
else
    log "Entering Tunnelbox setup ..."
    success=1
    . ./tunnelbox-config || success=0
    log-action "Finished Tunnelbox setup ..."
    log-result $success
fi

log-result $success
if [ $success -eq 0 ] ; then
   exit 1
fi
