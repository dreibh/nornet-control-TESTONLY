#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Make Tunnelbox Configuration
# Copyright (C) 2012-2013 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no


import sys;

# NorNet
from NorNetAPI       import *;
from NorNetNodeSetup import *;


# ====== Handle arguments ===================================================
bootstrapOnly = False
if len(sys.argv) < 2:
   error('Usage: ' + sys.argv[0] + ' FQDN [-bootstrap]')
fqdn = sys.argv[1]
if len(sys.argv) > 2:
   if sys.argv[2] == '-bootstrap':
      bootstrapOnly = True
   else:
      error('Usage: ' + sys.argv[0] + ' FQDN [-bootstrap]')


# ====== Get configuration ==================================================
if bootstrapOnly:
   loadNorNetConfiguration()
else:
   loginToPLC()

localSiteIndex             = getLocalSiteIndex()
localDefaultProviderIndex  = getLocalDefaultProviderIndex()
localTBDefaultProviderIPv4 = getLocalTunnelboxDefaultProviderIPv4()
localNodeNorNetInterface   = getLocalNodeNorNetInterface()

# ====== Some checks ========================================================
if localSiteIndex == None:
   error('NorNet_LocalSite_SiteIndex has not been set in configuration file!')
if ((localSiteIndex < 1) or (localSiteIndex > 255)):
    error('Bad NorNet_LocalSite_SiteIndex ' + str(localSiteIndex))
if localDefaultProviderIndex == None:
   error('NorNet_LocalSite_DefaultProviderIndex has not been set in configuration file!')
if ((localDefaultProviderIndex < 1) or (localDefaultProviderIndex > 255)):
    error('Bad NorNet_LocalSite_DefaultProviderIndex ' + str(localDefaultProviderIndex))
if localTBDefaultProviderIPv4 == None:
   error('NorNet_LocalSite_TBDefaultProviderIPv4 has not been set in configuration file!')
if localNodeNorNetInterface == None:
   error('NorNet_LocalNode_NorNetInterface has not been set in configuration file!')


# ====== Bootstrap Mode =====================================================
makeTunnelboxBootstrap(localSiteIndex, localDefaultProviderIndex,
                       localNodeNorNetInterface, localTBDefaultProviderIPv4,
                       'tunnelbox')

# ====== Full Mode ==========================================================
if not bootstrapOnly:
   fullSiteList = fetchNorNetSiteList()
   localSite    = None
   try:
      localSite = fullSiteList[localSiteIndex]
   except:
      error('Cannot find local site ' + str(localSiteIndex) + ' at PLC database!')
   siteNodeList = fetchNorNetNodeListForSite(localSite)

   makeTunnelBoxConfiguration(fullSiteList, localSite, 'tunnelbox')

   # ====== Prepare additional nodes for DNS configuration ==================
   additionalNodes = []
   for i in range(2, 255):
      nodeConfiguration = getLocalNodeConfigurationString(i)
      if nodeConfiguration != u'':
         # print i,nodeConfiguration
         parameters = re.split(r'''[ ]*(?=(?:[^'"]|'[^']*'|"[^"]*")*$)''', nodeConfiguration)
         if len(parameters) < 3:
            error('Bad configuration "' + nodeConfiguration + '" for NorNet_LocalSite_Node' + str(i))

         nodeName     = unquote(parameters[0])
         hardwareInfo = unquote(parameters[1])
         softwareInfo = unquote(parameters[2])
         additionalNodes.append(makeNodeForDNS(nodeName, localSite, i, hardwareInfo, softwareInfo))

   makeBindConfiguration(fullSiteList, siteNodeList, localSite, getHostnameFromFQDN(fqdn), additionalNodes)
